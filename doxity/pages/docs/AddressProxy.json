{"author":"App Store Foundation","title":"AddressProxy contract","fileName":"/contracts/AddressProxy.sol","name":"AddressProxy","abi":[{"constant":true,"inputs":[{"name":"id","type":"bytes32"}],"name":"getContractUpdatedTimeById","outputs":[{"name":"time","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAvailableIds","outputs":[{"name":"IdList","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"bytes32"}],"name":"getContractNameById","outputs":[{"name":"name","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"newAddress","type":"address"}],"name":"addAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"availableIds","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"bytes32"}],"name":"getContractCreatedTimeById","outputs":[{"name":"time","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"bytes32"}],"name":"getContractAddressById","outputs":[{"name":"contractAddr","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"bytes32"},{"indexed":false,"name":"name","type":"string"},{"indexed":false,"name":"at","type":"address"},{"indexed":false,"name":"createdTime","type":"uint256"},{"indexed":false,"name":"updatedTime","type":"uint256"}],"name":"AddressCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"bytes32"},{"indexed":false,"name":"name","type":"string"},{"indexed":false,"name":"at","type":"address"},{"indexed":false,"name":"createdTime","type":"uint256"},{"indexed":false,"name":"updatedTime","type":"uint256"}],"name":"AddressUpdated","type":"event"}],"bin":"608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bb3806100606000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063263fbd45146100935780635b80f497146100d85780638da5cb5b14610144578063bbef83cf1461019b578063ceb35b0f14610245578063d528d118146102ce578063da2216ef14610317578063efdff7bb1461035c575b600080fd5b34801561009f57600080fd5b506100c260048036038101908080356000191690602001909291905050506103cd565b6040518082815260200191505060405180910390f35b3480156100e457600080fd5b506100ed6103f5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610130578082015181840152602081019050610115565b505050509050019250505060405180910390f35b34801561015057600080fd5b50610159610451565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a757600080fd5b506101ca6004803603810190808035600019169060200190929190505050610476565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561020a5780820151818401526020810190506101ef565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025157600080fd5b506102cc600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610536565b005b3480156102da57600080fd5b506102f9600480360381019080803590602001909291905050506109db565b60405180826000191660001916815260200191505060405180910390f35b34801561032357600080fd5b5061034660048036038101908080356000191690602001909291905050506109fe565b6040518082815260200191505060405180910390f35b34801561036857600080fd5b5061038b6004803603810190808035600019169060200190929190505050610a26565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600160008360001916600019168152602001908152602001600020600401549050919050565b6060600280548060200260200160405190810160405280929190818152602001828054801561044757602002820191906000526020600020905b8154600019168152602001906001019080831161042f575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606001600083600019166000191681526020019081526020016000206001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561052a5780601f106104ff5761010080835404028352916020019161052a565b820191906000526020600020905b81548152906001019060200180831161050d57829003601f168201915b50505050509050919050565b600080610541610a99565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561059e57600080fd5b6105a786610a6e565b93506103e84202925060006001026001600086600019166000191681526020019081526020016000206000015460001916141561082957838260000190600019169081600019168152505085826020018190525084826040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082826060018181525050828260800181815250506002849080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905550816001600086600019166000191681526020019081526020016000206000820151816000019060001916905560208201518160010190805190602001906106c1929190610ae2565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030155608082015181600401559050507faf144d99e63101a78b71974cea4badf2df635ce55b1291d57b5a65256954293c82600001518360200151846040015185606001518660800151604051808660001916600019168152602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156107e65780820151818401526020810190506107cb565b50505050905090810190601f1680156108135780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a16109d3565b6001600085600019166000191681526020019081526020016000209050848160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508281600401819055507fece588eefade64ad7c953725b6d05ea30a6b613ef4764da59fa84a40039d35c38160000154826001018360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600301548560040154604051808660001916600019168152602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281038252868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156109c05780601f10610995576101008083540402835291602001916109c0565b820191906000526020600020905b8154815290600101906020018083116109a357829003601f168201915b5050965050505050505060405180910390a15b505050505050565b6002818154811015156109ea57fe5b906000526020600020016000915090505481565b6000600160008360001916600019168152602001908152602001600020600301549050919050565b600060016000836000191660001916815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006060829050600081511415610a8b5760006001029150610a93565b602083015191505b50919050565b60a0604051908101604052806000801916815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b2357805160ff1916838001178555610b51565b82800160010185558215610b51579182015b82811115610b50578251825591602001919060010190610b35565b5b509050610b5e9190610b62565b5090565b610b8491905b80821115610b80576000816000905550600101610b68565b5090565b905600a165627a7a723058203ab319af5152a8c53eb7c94c23bd9fa12ffb9f9b5ab152ee4ffb09ae062748030029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xBB3 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x263FBD45 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x5B80F497 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xBBEF83CF EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xCEB35B0F EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xD528D118 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xDA2216EF EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xEFDFF7BB EQ PUSH2 0x35C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x130 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x115 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x237 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x536 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x42F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x52A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x50D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x541 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A7 DUP7 PUSH2 0xA6E JUMP JUMPDEST SWAP4 POP PUSH2 0x3E8 TIMESTAMP MUL SWAP3 POP PUSH1 0x0 PUSH1 0x1 MUL PUSH1 0x1 PUSH1 0x0 DUP7 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x0 NOT AND EQ ISZERO PUSH2 0x829 JUMPI DUP4 DUP3 PUSH1 0x0 ADD SWAP1 PUSH1 0x0 NOT AND SWAP1 DUP2 PUSH1 0x0 NOT AND DUP2 MSTORE POP POP DUP6 DUP3 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP5 DUP3 PUSH1 0x40 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP3 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x2 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 PUSH1 0x0 NOT AND SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 PUSH1 0x0 NOT AND SWAP1 SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x6C1 SWAP3 SWAP2 SWAP1 PUSH2 0xAE2 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP PUSH32 0xAF144D99E63101A78B71974CEA4BADF2DF635CE55B1291D57B5A65256954293C DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP7 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7E6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7CB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x813 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xECE588EEFADE64AD7C953725B6D05EA30A6B613EF4764DA59FA84A40039D35C3 DUP2 PUSH1 0x0 ADD SLOAD DUP3 PUSH1 0x1 ADD DUP4 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP7 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x9C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x995 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x9EA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xA8B JUMPI PUSH1 0x0 PUSH1 0x1 MUL SWAP2 POP PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xB23 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB51 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB51 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB50 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB35 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB5E SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB84 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB80 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB68 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 GASPRICE 0xb3 NOT 0xaf MLOAD MSTORE 0xa8 0xc5 RETURNDATACOPY 0xb7 0xc9 0x4c 0x23 0xbd SWAP16 LOG1 0x2f CREATE2 SWAP16 SWAP12 GAS 0xb1 MSTORE 0xee 0x4f CREATE2 MULMOD 0xae MOD 0x27 0x48 SUB STOP 0x29 ","source":"pragma solidity ^0.4.19;\n\n/**\n@title AddressProxy contract\n@author App Store Foundation\n@dev This contract works as part of a set of mechanisms in order to maintain tracking of the latest\nversion's contracts deployed to the network.\n */\n\ncontract AddressProxy {\n\n    struct ContractAddress {\n        bytes32 id;\n        string name;\n        address at;\n        uint createdTime;\n        uint updatedTime;\n    }\n\n    address public owner;\n    mapping(bytes32 => ContractAddress) private contractsAddress;\n    bytes32[] public availableIds;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    event AddressCreated(bytes32 id, string name, address at, uint createdTime, uint updatedTime);\n    event AddressUpdated(bytes32 id, string name, address at, uint createdTime, uint updatedTime);\n\n    function AddressProxy() public {\n        owner = msg.sender;\n    }\n\n\n    /**\n    @notice Get all avaliable ids registered on the contract\n    @dev Just shows the list of ids registerd on the contract\n    @return { \"IdList\" : \"List of registered ids\" }\n     */\n    function getAvailableIds() public view returns (bytes32[] IdList) {\n        return availableIds;\n    }\n\n    /** \n    @notice  Adds or updates an address\n    @dev Used when a new address needs to be updated to a currently registered id or to a new id.\n    @param name Name of the contract\n    @param newAddress Address of the contract\n    */\n    function addAddress(string name, address newAddress) public onlyOwner {\n        bytes32 contAddId = stringToBytes32(name);\n\n        uint nowInMilliseconds = now * 1000;\n\n        if (contractsAddress[contAddId].id == 0x0) {\n            ContractAddress memory newContractAddress;\n            newContractAddress.id = contAddId;\n            newContractAddress.name = name;\n            newContractAddress.at = newAddress;\n            newContractAddress.createdTime = nowInMilliseconds;\n            newContractAddress.updatedTime = nowInMilliseconds;\n            availableIds.push(contAddId);\n            contractsAddress[contAddId] = newContractAddress;\n\n            emit AddressCreated(newContractAddress.id, newContractAddress.name, newContractAddress.at, newContractAddress.createdTime, newContractAddress.updatedTime);\n        } else {\n            ContractAddress storage contAdd = contractsAddress[contAddId];\n            contAdd.at = newAddress;\n            contAdd.updatedTime = nowInMilliseconds;\n\n            emit AddressUpdated(contAdd.id, contAdd.name, contAdd.at, contAdd.createdTime, contAdd.updatedTime);\n        }\n    }\n\n    /**\n    @notice Get the contract name associated to a certain id\n    @param id Id of the registry\n    @return { 'name' : 'Name of the contract associated to the given id' }\n     */\n    function getContractNameById(bytes32 id) public view returns(string name) {\n        return contractsAddress[id].name;\n    }\n\n\n    /**\n    @notice Get the contract address associated to a certain id\n    @param id Id of the registry\n    @return { 'contractAddr' : 'Address of the contract associated to the given id' }\n     */\n    function getContractAddressById(bytes32 id) public view returns(address contractAddr) {\n        return contractsAddress[id].at;\n    }\n\n    /**\n    @notice Get the specific date on which the contract address was firstly registered \n    to a certain id\n    @param id Id of the registry\n    @return { 'time' : 'Time in miliseconds of the first time the given id was registered' }\n     */\n    function getContractCreatedTimeById(bytes32 id) public view returns(uint time) {\n        return contractsAddress[id].createdTime;\n    }\n\n    /**\n    @notice Get the specific date on which the contract address was lastly updated to a certain id\n    @param id Id of the registry\n    @return { 'time' : 'Time in miliseconds of the last time the given id was updated' }\n     */\n    function getContractUpdatedTimeById(bytes32 id) public view returns(uint time) {\n        return contractsAddress[id].updatedTime;\n    }\n\n    /**\n    @notice Converts a string type variable into a byte32 type variable\n    @dev This function is internal and uses inline assembly instructions.\n    @param source string to be converted to a byte32 type\n    @return { 'result' : 'Initial string content converted to a byte32 type' }\n     */\n    function stringToBytes32(string source) internal pure returns (bytes32 result) {\n        bytes memory tempEmptyStringTest = bytes(source);\n        if (tempEmptyStringTest.length == 0) {\n            return 0x0;\n        }\n\n        assembly {\n            result := mload(add(source, 32))\n        }\n    }\n}\n","abiDocs":[{"constant":true,"inputs":[{"name":"id","type":"bytes32","description":"Id of the registry"}],"name":"getContractUpdatedTimeById","outputs":[{"name":"time","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","return":"{ 'time' : 'Time in miliseconds of the last time the given id was updated' }","notice":"Get the specific date on which the contract address was lastly updated to a certain id","signature":"getContractUpdatedTimeById(bytes32)","signatureHash":"263fbd45"},{"constant":true,"inputs":[],"name":"getAvailableIds","outputs":[{"name":"IdList","type":"bytes32[]","description":"List of registered ids"}],"payable":false,"stateMutability":"view","type":"function","details":"Just shows the list of ids registerd on the contract","return":"{ \"IdList\" : \"List of registered ids\" }","notice":"Get all avaliable ids registered on the contract","signature":"getAvailableIds()","signatureHash":"5b80f497"},{"constant":true,"inputs":[],"name":"owner","payable":false,"stateMutability":"view","type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":true,"inputs":[{"name":"id","type":"bytes32","description":"Id of the registry"}],"name":"getContractNameById","outputs":[{"name":"name","type":"string"}],"payable":false,"stateMutability":"view","type":"function","return":"{ 'name' : 'Name of the contract associated to the given id' }","notice":"Get the contract name associated to a certain id","signature":"getContractNameById(bytes32)","signatureHash":"bbef83cf"},{"constant":false,"inputs":[{"name":"name","type":"string","description":"Name of the contract"},{"name":"newAddress","type":"address","description":"Address of the contract"}],"name":"addAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Used when a new address needs to be updated to a currently registered id or to a new id.","notice":"Adds or updates an address","signature":"addAddress(string,address)","signatureHash":"ceb35b0f"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"availableIds","payable":false,"stateMutability":"view","type":"function","signature":"availableIds(uint256)","signatureHash":"d528d118"},{"constant":true,"inputs":[{"name":"id","type":"bytes32","description":"Id of the registry"}],"name":"getContractCreatedTimeById","outputs":[{"name":"time","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","return":"{ 'time' : 'Time in miliseconds of the first time the given id was registered' }","notice":"Get the specific date on which the contract address was firstly registered  to a certain id","signature":"getContractCreatedTimeById(bytes32)","signatureHash":"da2216ef"},{"constant":true,"inputs":[{"name":"id","type":"bytes32","description":"Id of the registry"}],"name":"getContractAddressById","outputs":[{"name":"contractAddr","type":"address"}],"payable":false,"stateMutability":"view","type":"function","return":"{ 'contractAddr' : 'Address of the contract associated to the given id' }","notice":"Get the contract address associated to a certain id","signature":"getContractAddressById(bytes32)","signatureHash":"efdff7bb"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"bytes32"},{"indexed":false,"name":"name","type":"string"},{"indexed":false,"name":"at","type":"address"},{"indexed":false,"name":"createdTime","type":"uint256"},{"indexed":false,"name":"updatedTime","type":"uint256"}],"name":"AddressCreated","type":"event","signature":"AddressCreated(bytes32,string,address,uint256,uint256)","signatureHash":"af144d99"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"bytes32"},{"indexed":false,"name":"name","type":"string"},{"indexed":false,"name":"at","type":"address"},{"indexed":false,"name":"createdTime","type":"uint256"},{"indexed":false,"name":"updatedTime","type":"uint256"}],"name":"AddressUpdated","type":"event","signature":"AddressUpdated(bytes32,string,address,uint256,uint256)","signatureHash":"ece588ee"}]}
