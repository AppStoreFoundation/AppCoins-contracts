{"author":"App Store Foundation","title":"Advertisement Storage contract","fileName":"/contracts/AdvertisementStorage.sol","name":"AdvertisementStorage","abi":[{"constant":true,"inputs":[{"name":"bidId","type":"bytes32"}],"name":"getCampaignBudgetById","outputs":[{"name":"budget","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32"}],"name":"getCampaignStartDateById","outputs":[{"name":"startDate","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32"},{"name":"price","type":"uint256"}],"name":"setCampaignPriceById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32"},{"name":"newEndDate","type":"uint256"}],"name":"setCampaignEndDateById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32"}],"name":"getCampaignValidById","outputs":[{"name":"valid","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32"},{"name":"newOwner","type":"address"}],"name":"setCampaignOwnerById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32"}],"name":"getCampaignOwnerById","outputs":[{"name":"campOwner","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32"},{"name":"isValid","type":"bool"}],"name":"setCampaignValidById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newAddress","type":"address"},{"name":"isAllowed","type":"bool"}],"name":"setAllowedAddresses","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32"},{"name":"newBudget","type":"uint256"}],"name":"setCampaignBudgetById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32"}],"name":"getCampaignEndDateById","outputs":[{"name":"endDate","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"campaignId","type":"bytes32"}],"name":"getCampaign","outputs":[{"name":"bidId","type":"bytes32"},{"name":"price","type":"uint256"},{"name":"budget","type":"uint256"},{"name":"startDate","type":"uint256"},{"name":"endDate","type":"uint256"},{"name":"valid","type":"bool"},{"name":"campOwner","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32"}],"name":"getCampaignPriceById","outputs":[{"name":"price","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32"},{"name":"newStartDate","type":"uint256"}],"name":"setCampaignStartDateById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32"},{"name":"price","type":"uint256"},{"name":"budget","type":"uint256"},{"name":"startDate","type":"uint256"},{"name":"endDate","type":"uint256"},{"name":"valid","type":"bool"},{"name":"owner","type":"address"}],"name":"setCampaign","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"bidId","type":"bytes32"},{"indexed":false,"name":"price","type":"uint256"},{"indexed":false,"name":"budget","type":"uint256"},{"indexed":false,"name":"startDate","type":"uint256"},{"indexed":false,"name":"endDate","type":"uint256"},{"indexed":false,"name":"valid","type":"bool"},{"indexed":false,"name":"owner","type":"address"}],"name":"CampaignCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"bidId","type":"bytes32"},{"indexed":false,"name":"price","type":"uint256"},{"indexed":false,"name":"budget","type":"uint256"},{"indexed":false,"name":"startDate","type":"uint256"},{"indexed":false,"name":"endDate","type":"uint256"},{"indexed":false,"name":"valid","type":"bool"},{"indexed":false,"name":"owner","type":"address"}],"name":"CampaignUpdated","type":"event"}],"bin":"608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506115a3806100b86000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063094fb864146100eb57806312e6414e1461013057806316b4e79c1461017557806317a2c026146101b057806339384126146101eb5780634239922014610234578063433b77c714610285578063745944d5146102f657806389781912146103335780638da5cb5b14610382578063965acc73146103d9578063a941ff2114610414578063cabe045214610459578063d55bdc5f14610500578063f86a633414610545578063fbac7d1d14610580575b600080fd5b3480156100f757600080fd5b5061011a6004803603810190808035600019169060200190929190505050610605565b6040518082815260200191505060405180910390f35b34801561013c57600080fd5b5061015f600480360381019080803560001916906020019092919050505061062c565b6040518082815260200191505060405180910390f35b34801561018157600080fd5b506101ae600480360381019080803560001916906020019092919080359060200190929190505050610653565b005b3480156101bc57600080fd5b506101e96004803603810190808035600019169060200190929190803590602001909291905050506107aa565b005b3480156101f757600080fd5b5061021a6004803603810190808035600019169060200190929190505050610901565b604051808215151515815260200191505060405180910390f35b34801561024057600080fd5b506102836004803603810190808035600019169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610935565b005b34801561029157600080fd5b506102b46004803603810190808035600019169060200190929190505050610ac6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030257600080fd5b506103316004803603810190808035600019169060200190929190803515159060200190929190505050610b0d565b005b34801561033f57600080fd5b50610380600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610c77565b005b34801561038e57600080fd5b50610397610d2e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e557600080fd5b50610412600480360381019080803560001916906020019092919080359060200190929190505050610d54565b005b34801561042057600080fd5b506104436004803603810190808035600019169060200190929190505050610eab565b6040518082815260200191505060405180910390f35b34801561046557600080fd5b506104886004803603810190808035600019169060200190929190505050610ed2565b604051808860001916600019168152602001878152602001868152602001858152602001848152602001831515151581526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390f35b34801561050c57600080fd5b5061052f6004803603810190808035600019169060200190929190505050610f64565b6040518082815260200191505060405180910390f35b34801561055157600080fd5b5061057e600480360381019080803560001916906020019092919080359060200190929190505050610f8b565b005b34801561058c57600080fd5b50610603600480360381019080803560001916906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110e2565b005b60008060008360001916600019168152602001908152602001600020600201549050919050565b60008060008360001916600019168152602001908152602001600020600301549050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156106ab57600080fd5b806000808460001916600019168152602001908152602001600020600101819055506107a6600080846000191660001916815260200190815260200160002060e06040519081016040529081600082015460001916600019168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505061133f565b5050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561080257600080fd5b806000808460001916600019168152602001908152602001600020600401819055506108fd600080846000191660001916815260200190815260200160002060e06040519081016040529081600082015460001916600019168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505061133f565b5050565b6000806000836000191660001916815260200190815260200160002060050160009054906101000a900460ff169050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561098d57600080fd5b80600080846000191660001916815260200190815260200160002060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ac2600080846000191660001916815260200190815260200160002060e06040519081016040529081600082015460001916600019168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505061133f565b5050565b6000806000836000191660001916815260200190815260200160002060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610b6557600080fd5b80600080846000191660001916815260200190815260200160002060050160006101000a81548160ff021916908315150217905550610c73600080846000191660001916815260200190815260200160002060e06040519081016040529081600082015460001916600019168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505061133f565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cd357600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610dac57600080fd5b80600080846000191660001916815260200190815260200160002060020181905550610ea7600080846000191660001916815260200190815260200160002060e06040519081016040529081600082015460001916600019168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505061133f565b5050565b60008060008360001916600019168152602001908152602001600020600401549050919050565b6000806000806000806000806000808a600019166000191681526020019081526020016000209050806000015481600101548260020154836003015484600401548560050160009054906101000a900460ff168660050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16975097509750975097509750975050919395979092949650565b60008060008360001916600019168152602001908152602001600020600101549050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610fe357600080fd5b806000808460001916600019168152602001908152602001600020600301819055506110de600080846000191660001916815260200190815260200160002060e06040519081016040529081600082015460001916600019168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505061133f565b5050565b6110ea61151e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561114257600080fd5b60008082600001516000191660001916815260200190815260200160002060e06040519081016040529081600082015460001916600019168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060e0604051908101604052808960001916815260200188815260200187815260200186815260200185815260200184151581526020018373ffffffffffffffffffffffffffffffffffffffff1681525090506112748161133f565b80600080836000015160001916600019168152602001908152602001600020600082015181600001906000191690556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505050505050565b600080600083600001516000191660001916815260200190815260200160002060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561145f577f4b621f68ca884f0ae6c5f06495343e6866a79198886ff7339bdebfddcf98982c816000015182602001518360400151846060015185608001518660a001518760c00151604051808860001916600019168152602001878152602001868152602001858152602001848152602001831515151581526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390a161151b565b7f1dfc70f8a31d22bffc6f391c184f3dde2ba422419dea195c6da85c5f1650452f816000015182602001518360400151846060015185608001518660a001518760c00151604051808860001916600019168152602001878152602001868152602001858152602001848152602001831515151581526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390a15b50565b60e0604051908101604052806000801916815260200160008152602001600081526020016000815260200160008152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905600a165627a7a72305820b218c701a3a446b91a35ab1cb6bd33694e0e188b65220944aeb5504c2a3e27f30029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x15A3 DUP1 PUSH2 0xB8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x94FB864 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x12E6414E EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x16B4E79C EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x17A2C026 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x39384126 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x42399220 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x433B77C7 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x745944D5 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x89781912 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x965ACC73 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xA941FF21 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xCABE0452 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xD55BDC5F EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xF86A6334 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xFBAC7D1D EQ PUSH2 0x580 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x653 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x935 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB0D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC77 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x603 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10E2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x7A6 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x133F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x8FD PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x133F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xAC2 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x133F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC73 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x133F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xEA7 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x133F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x4 ADD SLOAD DUP6 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP7 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10DE PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x133F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10EA PUSH2 0x151E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x1274 DUP2 PUSH2 0x133F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 PUSH1 0x0 NOT AND SWAP1 SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x145F JUMPI PUSH32 0x4B621F68CA884F0AE6C5F06495343E6866A79198886FF7339BDEBFDDCF98982C DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0xC0 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP9 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x151B JUMP JUMPDEST PUSH32 0x1DFC70F8A31D22BFFC6F391C184F3DDE2BA422419DEA195C6DA85C5F1650452F DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0xC0 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP9 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb2 XOR 0xc7 ADD LOG3 LOG4 0x46 0xb9 BYTE CALLDATALOAD 0xab SHR 0xb6 0xbd CALLER PUSH10 0x4E0E188B65220944AEB5 POP 0x4c 0x2a RETURNDATACOPY 0x27 RETURN STOP 0x29 ","source":"pragma solidity ^0.4.19;\n\nimport  { CampaignLibrary } from \"./CampaignLibrary.sol\";\n\n/**\n@title Advertisement Storage contract\n@author App Store Foundation\n@dev The Advertisement Storage contract works as part of the user aquisition flow of the \nAdvertisement contract. This contract is responsible from storing information regardign user \naquisiton campaigns.\n*/\ncontract AdvertisementStorage {\n\n    mapping (bytes32 => CampaignLibrary.Campaign) campaigns;\n    mapping (address => bool) allowedAddresses;\n    address public owner;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    modifier onlyAllowedAddress() {\n        require(allowedAddresses[msg.sender]);\n        _;\n    }\n\n    event CampaignCreated\n        (\n            bytes32 bidId,\n            uint price,\n            uint budget,\n            uint startDate,\n            uint endDate,\n            bool valid,\n            address owner\n    );\n\n    event CampaignUpdated\n        (\n            bytes32 bidId,\n            uint price,\n            uint budget,\n            uint startDate,\n            uint endDate,\n            bool valid,\n            address  owner\n    );\n\n    /**\n    @notice Constructor function\n    @dev\n        Initializes contract and updates allowed addresses to interact with contract functions.\n    */\n    function AdvertisementStorage() public {\n        owner = msg.sender;\n        allowedAddresses[msg.sender] = true;\n    }\n\n    /**\n    @notice Updates the list of allowed addresses in the contract\n    @dev\n        Updates the list of allowed or disallowed addresses to interact with the contract.\n    @param newAddress Address with need for a permission update\n    @param isAllowed Boolean with the new permissions for the specified address\n    */\n    function setAllowedAddresses(address newAddress, bool isAllowed) public onlyOwner {\n        allowedAddresses[newAddress] = isAllowed;\n    }\n\n    /**\n    @notice Get a Campaign information\n    @dev \n        Based on a camapaign Id (bidId), returns all stored information for that campaign.\n    @param campaignId Id of the campaign\n    @return {\n        \"bidId\" : \"Id of the campaign\",\n        \"price\" : \"Value to pay for each proof-of-attention\",\n        \"budget\" : \"Total value avaliable to be spent on the campaign\",\n        \"startDate\" : \"Start date of the campaign (in miliseconds)\",\n        \"endDate\" : \"End date of the campaign (in miliseconds)\"\n        \"valid\" : \"Boolean informing if the campaign is valid\",\n        \"campOwner\" : \"Address of the campaing's owner\"\n    }\n    */\n    function getCampaign(bytes32 campaignId)\n        public\n        view\n        returns (\n            bytes32 bidId,\n            uint price,\n            uint budget,\n            uint startDate,\n            uint endDate,\n            bool valid,\n            address campOwner\n        ) {\n\n        CampaignLibrary.Campaign storage campaign = campaigns[campaignId];\n\n        return (\n            campaign.bidId,\n            campaign.price,\n            campaign.budget,\n            campaign.startDate,\n            campaign.endDate,\n            campaign.valid,\n            campaign.owner\n        );\n    }\n\n    /**\n    @notice Add or update a campaign information\n    @dev\n        Based on a campaign Id (bidId), a campaign can be created (if non existent) or updated.\n        This function can only be called by the set of allowed addresses registered earlier.\n        An event will be emited during this function's execution, a CampaignCreated event if the \n        campaign does not exist yet or a CampaignUpdated if the campaign id is already registered.\n\n    @param bidId Id of the campaign\n    @param price Value to pay for each proof-of-attention\n    @param budget Total value avaliable to be spent on the campaign\n    @param startDate Start date of the campaign (in miliseconds)\n    @param endDate End date of the campaign (in miliseconds)\n    @param valid Boolean informing if the campaign is valid\n    @param owner Address of the campaing's owner\n    */\n    function setCampaign (\n        bytes32 bidId,\n        uint price,\n        uint budget,\n        uint startDate,\n        uint endDate,\n        bool valid,\n        address owner\n    )\n    public\n    onlyAllowedAddress {\n\n        CampaignLibrary.Campaign memory campaign = campaigns[campaign.bidId];\n\n        campaign = CampaignLibrary.Campaign({\n            bidId: bidId,\n            price: price,\n            budget: budget,\n            startDate: startDate,\n            endDate: endDate,\n            valid: valid,\n            owner: owner\n        });\n\n        emitEvent(campaign);\n\n        campaigns[campaign.bidId] = campaign;\n        \n    }\n\n    /**\n    @notice Get the price of a campaign\n    @dev\n        Based on the Campaign id, return the value paid for each proof of attention registered.\n    @param bidId Campaign id to which the query refers\n    @return { \"price\" : \"Reward (in wei) for each proof of attention registered\"} \n    */\n    function getCampaignPriceById(bytes32 bidId)\n        public\n        view\n        returns (uint price) {\n        return campaigns[bidId].price;\n    }\n\n    /** \n    @notice Set a new price for a campaign\n    @dev\n        Based on the Campaign id, updates the value paid for each proof of attention registered.\n        This function can only be executed by allowed addresses and emits a CampaingUpdate event.\n    @param bidId Campaing id to which the update refers\n    @param price New price for each proof of attention\n    */\n    function setCampaignPriceById(bytes32 bidId, uint price)\n        public\n        onlyAllowedAddress\n        {\n        campaigns[bidId].price = price;\n        emitEvent(campaigns[bidId]);\n    }\n\n    /**\n    @notice Get the budget avaliable of a campaign\n    @dev\n        Based on the Campaign id, return the total value avaliable to pay for proofs of attention.\n    @param bidId Campaign id to which the query refers\n    @return { \"budget\" : \"Total value (in wei) spendable in proof of attention rewards\"} \n    */\n    function getCampaignBudgetById(bytes32 bidId)\n        public\n        view\n        returns (uint budget) {\n        return campaigns[bidId].budget;\n    }\n\n    /**\n    @notice Set a new campaign budget\n    @dev\n        Based on the Campaign id, updates the total value avaliable for proof of attention \n        registrations. This function can only be executed by allowed addresses and emits a \n        CampaignUpdated event. This function does not transfer any funds as this contract only works\n        as a data repository, every logic needed will be processed in the Advertisement contract.\n    @param bidId Campaign id to which the query refers\n    @param newBudget New value for the total budget of the campaign\n    */\n    function setCampaignBudgetById(bytes32 bidId, uint newBudget)\n        public\n        onlyAllowedAddress\n        {\n        campaigns[bidId].budget = newBudget;\n        emitEvent(campaigns[bidId]);\n    }\n\n    /** \n    @notice Get the start date of a campaign\n    @dev\n        Based on the Campaign id, return the value (in miliseconds) corresponding to the start Date\n        of the campaign.\n    @param bidId Campaign id to which the query refers\n    @return { \"startDate\" : \"Start date (in miliseconds) of the campaign\"} \n    */\n    function getCampaignStartDateById(bytes32 bidId)\n        public\n        view\n        returns (uint startDate) {\n        return campaigns[bidId].startDate;\n    }\n\n    /**\n    @notice Set a new start date for a campaign\n    @dev\n        Based of the Campaign id, updates the start date of a campaign. This function can only be \n        executed by allowed addresses and emits a CampaignUpdated event.\n    @param bidId Campaign id to which the query refers\n    @param newStartDate New value (in miliseconds) for the start date of the campaign\n    */\n    function setCampaignStartDateById(bytes32 bidId, uint newStartDate)\n        public\n        onlyAllowedAddress\n        {\n        campaigns[bidId].startDate = newStartDate;\n        emitEvent(campaigns[bidId]);\n    }\n    \n    /** \n    @notice Get the end date of a campaign\n    @dev\n        Based on the Campaign id, return the value (in miliseconds) corresponding to the end Date\n        of the campaign.\n    @param bidId Campaign id to which the query refers\n    @return { \"endDate\" : \"End date (in miliseconds) of the campaign\"} \n    */\n    function getCampaignEndDateById(bytes32 bidId)\n        public\n        view\n        returns (uint endDate) {\n        return campaigns[bidId].endDate;\n    }\n\n    /**\n    @notice Set a new end date for a campaign\n    @dev\n        Based of the Campaign id, updates the end date of a campaign. This function can only be \n        executed by allowed addresses and emits a CampaignUpdated event.\n    @param bidId Campaign id to which the query refers\n    @param newEndDate New value (in miliseconds) for the end date of the campaign\n    */\n    function setCampaignEndDateById(bytes32 bidId, uint newEndDate)\n        public\n        onlyAllowedAddress\n        {\n        campaigns[bidId].endDate = newEndDate;\n        emitEvent(campaigns[bidId]);\n    }\n    /** \n    @notice Get information regarding validity of a campaign.\n    @dev\n        Based on the Campaign id, return a boolean which represents a valid campaign if it has \n        the value of True else has the value of False.\n    @param bidId Campaign id to which the query refers\n    @return { \"valid\" : \"Validity of the campaign\"} \n    */\n    function getCampaignValidById(bytes32 bidId)\n        public\n        view\n        returns (bool valid) {\n        return campaigns[bidId].valid;\n    }\n\n    /**\n    @notice Set a new campaign validity state.\n    @dev\n        Updates the validity of a campaign based on a campaign Id. This function can only be \n        executed by allowed addresses and emits a CampaignUpdated event.\n    @param bidId Campaign id to which the query refers\n    @param isValid New value for the campaign validity\n    */\n    function setCampaignValidById(bytes32 bidId, bool isValid)\n        public\n        onlyAllowedAddress\n        {\n        campaigns[bidId].valid = isValid;\n        emitEvent(campaigns[bidId]);\n    }\n\n    /**\n    @notice Get the owner of a campaign \n    @dev \n        Based on the Campaign id, return the address of the campaign owner.\n    @param bidId Campaign id to which the query refers\n    @return { \"campOwner\" : \"Address of the campaign owner\" } \n    */\n    function getCampaignOwnerById(bytes32 bidId)\n        public\n        view\n        returns (address campOwner) {\n        return campaigns[bidId].owner;\n    }\n\n    /**\n    @notice Set a new campaign owner \n    @dev\n        Based on the Campaign id, update the owner of the refered campaign. This function can only \n        be executed by allowed addresses and emits a CampaignUpdated event.\n    @param bidId Campaign id to which the query refers\n    @param newOwner New address to be the owner of the campaign\n    */\n    function setCampaignOwnerById(bytes32 bidId, address newOwner)\n        public\n        onlyAllowedAddress\n        {\n        campaigns[bidId].owner = newOwner;\n        emitEvent(campaigns[bidId]);\n    }\n\n    /**\n    @notice Internal function for event emission\n    @dev\n        Checks if a campaign is already stored in contract. If the campaign exists, it emits a \n        CampaignUpdated event with the new campaign information. In case it is a new campaign, the \n        same information is emited as a CampaingCreatedEvent. \n    */\n    function emitEvent(CampaignLibrary.Campaign campaign) private {\n\n        if (campaigns[campaign.bidId].owner == 0x0) {\n            emit CampaignCreated(\n                campaign.bidId,\n                campaign.price,\n                campaign.budget,\n                campaign.startDate,\n                campaign.endDate,\n                campaign.valid,\n                campaign.owner\n            );\n        } else {\n            emit CampaignUpdated(\n                campaign.bidId,\n                campaign.price,\n                campaign.budget,\n                campaign.startDate,\n                campaign.endDate,\n                campaign.valid,\n                campaign.owner\n            );\n        }\n    }\n}\n","abiDocs":[{"constant":true,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"}],"name":"getCampaignBudgetById","outputs":[{"name":"budget","type":"uint256","description":"Total value (in wei) spendable in proof of attention rewards"}],"payable":false,"stateMutability":"view","type":"function","details":"Based on the Campaign id, return the total value avaliable to pay for proofs of attention.","return":"{ \"budget\" : \"Total value (in wei) spendable in proof of attention rewards\"} ","notice":"Get the budget avaliable of a campaign","signature":"getCampaignBudgetById(bytes32)","signatureHash":"094fb864"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"}],"name":"getCampaignStartDateById","outputs":[{"name":"startDate","type":"uint256","description":"Start date (in miliseconds) of the campaign"}],"payable":false,"stateMutability":"view","type":"function","details":"Based on the Campaign id, return the value (in miliseconds) corresponding to the start Date of the campaign.","return":"{ \"startDate\" : \"Start date (in miliseconds) of the campaign\"} ","notice":"Get the start date of a campaign","signature":"getCampaignStartDateById(bytes32)","signatureHash":"12e6414e"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaing id to which the update refers"},{"name":"price","type":"uint256","description":"New price for each proof of attention"}],"name":"setCampaignPriceById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Based on the Campaign id, updates the value paid for each proof of attention registered. This function can only be executed by allowed addresses and emits a CampaingUpdate event.","notice":"Set a new price for a campaign","signature":"setCampaignPriceById(bytes32,uint256)","signatureHash":"16b4e79c"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"},{"name":"newEndDate","type":"uint256","description":"New value (in miliseconds) for the end date of the campaign"}],"name":"setCampaignEndDateById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Based of the Campaign id, updates the end date of a campaign. This function can only be  executed by allowed addresses and emits a CampaignUpdated event.","notice":"Set a new end date for a campaign","signature":"setCampaignEndDateById(bytes32,uint256)","signatureHash":"17a2c026"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"}],"name":"getCampaignValidById","outputs":[{"name":"valid","type":"bool","description":"Validity of the campaign"}],"payable":false,"stateMutability":"view","type":"function","details":"Based on the Campaign id, return a boolean which represents a valid campaign if it has  the value of True else has the value of False.","return":"{ \"valid\" : \"Validity of the campaign\"} ","notice":"Get information regarding validity of a campaign.","signature":"getCampaignValidById(bytes32)","signatureHash":"39384126"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"},{"name":"newOwner","type":"address","description":"New address to be the owner of the campaign"}],"name":"setCampaignOwnerById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Based on the Campaign id, update the owner of the refered campaign. This function can only  be executed by allowed addresses and emits a CampaignUpdated event.","notice":"Set a new campaign owner ","signature":"setCampaignOwnerById(bytes32,address)","signatureHash":"42399220"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"}],"name":"getCampaignOwnerById","outputs":[{"name":"campOwner","type":"address","description":"Address of the campaign owner"}],"payable":false,"stateMutability":"view","type":"function","details":" Based on the Campaign id, return the address of the campaign owner.","return":"{ \"campOwner\" : \"Address of the campaign owner\" } ","notice":"Get the owner of a campaign ","signature":"getCampaignOwnerById(bytes32)","signatureHash":"433b77c7"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"},{"name":"isValid","type":"bool","description":"New value for the campaign validity"}],"name":"setCampaignValidById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Updates the validity of a campaign based on a campaign Id. This function can only be  executed by allowed addresses and emits a CampaignUpdated event.","notice":"Set a new campaign validity state.","signature":"setCampaignValidById(bytes32,bool)","signatureHash":"745944d5"},{"constant":false,"inputs":[{"name":"newAddress","type":"address","description":"Address with need for a permission update"},{"name":"isAllowed","type":"bool","description":"Boolean with the new permissions for the specified address"}],"name":"setAllowedAddresses","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Updates the list of allowed or disallowed addresses to interact with the contract.","notice":"Updates the list of allowed addresses in the contract","signature":"setAllowedAddresses(address,bool)","signatureHash":"89781912"},{"constant":true,"inputs":[],"name":"owner","payable":false,"stateMutability":"view","type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"},{"name":"newBudget","type":"uint256","description":"New value for the total budget of the campaign"}],"name":"setCampaignBudgetById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Based on the Campaign id, updates the total value avaliable for proof of attention  registrations. This function can only be executed by allowed addresses and emits a  CampaignUpdated event. This function does not transfer any funds as this contract only works as a data repository, every logic needed will be processed in the Advertisement contract.","notice":"Set a new campaign budget","signature":"setCampaignBudgetById(bytes32,uint256)","signatureHash":"965acc73"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"}],"name":"getCampaignEndDateById","outputs":[{"name":"endDate","type":"uint256","description":"End date (in miliseconds) of the campaign"}],"payable":false,"stateMutability":"view","type":"function","details":"Based on the Campaign id, return the value (in miliseconds) corresponding to the end Date of the campaign.","return":"{ \"endDate\" : \"End date (in miliseconds) of the campaign\"} ","notice":"Get the end date of a campaign","signature":"getCampaignEndDateById(bytes32)","signatureHash":"a941ff21"},{"constant":true,"inputs":[{"name":"campaignId","type":"bytes32","description":"Id of the campaign"}],"name":"getCampaign","outputs":[{"name":"bidId","type":"bytes32"},{"name":"price","type":"uint256"},{"name":"budget","type":"uint256"},{"name":"startDate","type":"uint256"},{"name":"endDate","type":"uint256"},{"name":"valid","type":"bool"},{"name":"campOwner","type":"address"}],"payable":false,"stateMutability":"view","type":"function","details":" Based on a camapaign Id (bidId), returns all stored information for that campaign.","return":"{ \"bidId\" : \"Id of the campaign\", \"price\" : \"Value to pay for each proof-of-attention\", \"budget\" : \"Total value avaliable to be spent on the campaign\", \"startDate\" : \"Start date of the campaign (in miliseconds)\", \"endDate\" : \"End date of the campaign (in miliseconds)\" \"valid\" : \"Boolean informing if the campaign is valid\", \"campOwner\" : \"Address of the campaing's owner\" }","notice":"Get a Campaign information","signature":"getCampaign(bytes32)","signatureHash":"cabe0452"},{"constant":true,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"}],"name":"getCampaignPriceById","outputs":[{"name":"price","type":"uint256","description":"Reward (in wei) for each proof of attention registered"}],"payable":false,"stateMutability":"view","type":"function","details":"Based on the Campaign id, return the value paid for each proof of attention registered.","return":"{ \"price\" : \"Reward (in wei) for each proof of attention registered\"} ","notice":"Get the price of a campaign","signature":"getCampaignPriceById(bytes32)","signatureHash":"d55bdc5f"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32","description":"Campaign id to which the query refers"},{"name":"newStartDate","type":"uint256","description":"New value (in miliseconds) for the start date of the campaign"}],"name":"setCampaignStartDateById","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Based of the Campaign id, updates the start date of a campaign. This function can only be  executed by allowed addresses and emits a CampaignUpdated event.","notice":"Set a new start date for a campaign","signature":"setCampaignStartDateById(bytes32,uint256)","signatureHash":"f86a6334"},{"constant":false,"inputs":[{"name":"bidId","type":"bytes32","description":"Id of the campaign"},{"name":"price","type":"uint256","description":"Value to pay for each proof-of-attention"},{"name":"budget","type":"uint256","description":"Total value avaliable to be spent on the campaign"},{"name":"startDate","type":"uint256","description":"Start date of the campaign (in miliseconds)"},{"name":"endDate","type":"uint256","description":"End date of the campaign (in miliseconds)"},{"name":"valid","type":"bool","description":"Boolean informing if the campaign is valid"},{"name":"owner","type":"address","description":"Address of the campaing's owner"}],"name":"setCampaign","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Based on a campaign Id (bidId), a campaign can be created (if non existent) or updated. This function can only be called by the set of allowed addresses registered earlier. An event will be emited during this function's execution, a CampaignCreated event if the  campaign does not exist yet or a CampaignUpdated if the campaign id is already registered.","notice":"Add or update a campaign information","signature":"setCampaign(bytes32,uint256,uint256,uint256,uint256,bool,address)","signatureHash":"fbac7d1d"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"bidId","type":"bytes32"},{"indexed":false,"name":"price","type":"uint256"},{"indexed":false,"name":"budget","type":"uint256"},{"indexed":false,"name":"startDate","type":"uint256"},{"indexed":false,"name":"endDate","type":"uint256"},{"indexed":false,"name":"valid","type":"bool"},{"indexed":false,"name":"owner","type":"address"}],"name":"CampaignCreated","type":"event","signature":"CampaignCreated(bytes32,uint256,uint256,uint256,uint256,bool,address)","signatureHash":"4b621f68"},{"anonymous":false,"inputs":[{"indexed":false,"name":"bidId","type":"bytes32"},{"indexed":false,"name":"price","type":"uint256"},{"indexed":false,"name":"budget","type":"uint256"},{"indexed":false,"name":"startDate","type":"uint256"},{"indexed":false,"name":"endDate","type":"uint256"},{"indexed":false,"name":"valid","type":"bool"},{"indexed":false,"name":"owner","type":"address"}],"name":"CampaignUpdated","type":"event","signature":"CampaignUpdated(bytes32,uint256,uint256,uint256,uint256,bool,address)","signatureHash":"1dfc70f8"}]}
